/*由1~N^2组成的N阶方阵，并输出
1  3  4  10
2  5  9  11
6  8  12  15
7  13  14  16
*/

#include <iostream>
int main()
{
    using std::cout;
    int N;
    cout << "请输入方阵阶数N:";
    std::cin >> N;
    cout << std::endl;
    if(N==1)
        cout << 1;
    else
    {
        int a[N][N], i = 0, j = 0;
        a[0][0] = 1;
        a[N-1][N-1] = N * N;
        bool flag = true, flag1 = true; //flag:true向下   false向上 flag1:是否平移
        for (int m = 2; m < N * N; ++m)
        {
            if (i == 0 || i == N - 1)
            {
                if (j != N - 1)
                {
                    if(flag1)
                    {
                        a[i][++j] = m;
                        flag1 = false;
                    }
                    else
                    {
                        flag = flag ? false : true;
                        flag1 = true;
                        if(!flag)
                            a[++i][--j] = m;
                        else
                            a[--i][++j] = m;    
                    }
                }
                else
                {
                    if(flag1)
                    {
                        a[++i][j] = m;
                        flag1 = false;
                    }
                    else
                    {
                        flag1 = true;
                        flag = flag ? false : true;
                        if(!flag)
                            a[++i][--j] = m;
                        else
                            a[--i][++j] = m;
                    }
                }
            }
            else if (j == 0 || j == N - 1)
            {
                if (i != N - 1)
                {
                    if(flag1)
                    {
                        a[++i][j] = m;
                        flag1 = false;
                    }
                    else
                    {
                        flag = flag ? false : true;
                        flag1 = true;
                        if(!flag)
                            a[++i][--j] = m;
                        else
                            a[--i][++j] = m;
                    }
                }
                else
                {
                    if(flag1)
                    {
                        a[i][++j] = m;
                        flag1 = false;
                    }
                    else
                    {
                        flag = flag ? false : true;
                        flag1 = true;
                        if(!flag)
                            a[++i][--j] = m;
                        else
                            a[--i][++j] = m;
                    }
                }
            }
            else
            {
                if(flag)
                    a[--i][++j] = m;
                else
                    a[++i][--j] = m;
            }
        }
        for (int c = 0; c < N; ++c)
        {
            for (int b = 0; b < N; ++b)
                cout << a[b][c]<<std::ends;
            cout << std::endl;
        }
    }
    return 0;
}
